group 'com.tw'
version '1.0-SNAPSHOT'

apply plugin: 'scala'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.monochromeroad.gradle-plugins:gradle-aws-s3-sync:0.10"
    }
}

apply plugin: "com.monochromeroad.s3sync"

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'com.thoughtworks.datacommons', name: 'prep-buddy', version: '0.5.0'
    compile 'org.apache.spark:spark-core_2.11:1.6.1'
    compile 'org.apache.spark:spark-mllib_2.11:1.6.1'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.scalatest', name: 'scalatest_2.11', version: '2.2.1'
}

jar{
    from 'resources/'
}

import com.monochromeroad.gradle.plugin.aws.s3.S3Sync

task syncData(type: S3Sync) {
    description = "Deploys my data on a s3 bucket."
    def properties = new Properties()
    properties.load(new FileInputStream("secret.properties"))
    accessKey properties.getProperty("accessKey")
    secretKey properties.getProperty("secretKey")

    configFile "jets3t.properties"

    from "tpch-benchmark-datasets"
    into properties.getProperty("data.path")
}